source("~/gitDevelopment/LineagePulse/R/main_MixtureModel.R")
objectLP_pancreas <- runMixtureModel(matCounts=matCountsPancreasRed[1:50,],
scaNMixtures=8,
vecFixedAssignments=NULL,
matPiConstPredictors=NULL,
vecNormConstExternal=NULL,
strDispModel="constant",
scaMaxEstimationCyclesEMlike=20,
scaMaxEstimationCyclesDropModel=20,
scaNProc=6,
boolVerbose=TRUE,
boolSuperVerbose=TRUE )
rm(list=ls())
load("/home/david/gdrive/phd/datasets/2016_PancreasAtlas/matCountsPancreasRed.RData")
source("~/gitDevelopment/LineagePulse/R/main_MixtureModel.R")
objectLP_pancreas <- runMixtureModel(matCounts=matCountsPancreasRed[1:50,],
scaNMixtures=8,
vecFixedAssignments=NULL,
matPiConstPredictors=NULL,
vecNormConstExternal=NULL,
strDispModel="constant",
scaMaxEstimationCyclesEMlike=20,
scaMaxEstimationCyclesDropModel=20,
scaNProc=6,
boolVerbose=TRUE,
boolSuperVerbose=TRUE )
rm(list=ls())
load("/home/david/gdrive/phd/datasets/2016_PancreasAtlas/matCountsPancreasRed.RData")
source("~/gitDevelopment/LineagePulse/R/main_MixtureModel.R")
objectLP_pancreas <- runMixtureModel(matCounts=matCountsPancreasRed[1:50,],
scaNMixtures=8,
vecFixedAssignments=NULL,
matPiConstPredictors=NULL,
vecNormConstExternal=NULL,
strDispModel="constant",
scaMaxEstimationCyclesEMlike=20,
scaMaxEstimationCyclesDropModel=20,
scaNProc=6,
boolVerbose=TRUE,
boolSuperVerbose=TRUE )
rm(list=ls())
load("/home/david/gdrive/phd/datasets/2016_PancreasAtlas/matCountsPancreasRed.RData")
source("~/gitDevelopment/LineagePulse/R/main_MixtureModel.R")
objectLP_pancreas <- runMixtureModel(matCounts=matCountsPancreasRed[1:50,],
scaNMixtures=8,
vecFixedAssignments=NULL,
matPiConstPredictors=NULL,
vecNormConstExternal=NULL,
strDispModel="constant",
scaMaxEstimationCyclesEMlike=20,
scaMaxEstimationCyclesDropModel=20,
scaNProc=6,
boolVerbose=TRUE,
boolSuperVerbose=TRUE )
rm(list=ls())
load("/home/david/gdrive/phd/datasets/2016_PancreasAtlas/matCountsPancreasRed.RData")
source("~/gitDevelopment/LineagePulse/R/main_MixtureModel.R")
objectLP_pancreas <- runMixtureModel(matCounts=matCountsPancreasRed[1:50,],
scaNMixtures=8,
vecFixedAssignments=NULL,
matPiConstPredictors=NULL,
vecNormConstExternal=NULL,
strDispModel="constant",
scaMaxEstimationCyclesEMlike=20,
scaMaxEstimationCyclesDropModel=20,
scaNProc=6,
boolVerbose=TRUE,
boolSuperVerbose=TRUE )
rm(list=ls())
load("/home/david/gdrive/phd/datasets/2016_PancreasAtlas/matCountsPancreasRed.RData")
source("~/gitDevelopment/LineagePulse/R/main_MixtureModel.R")
objectLP_pancreas <- runMixtureModel(matCounts=matCountsPancreasRed[1:50,],
scaNMixtures=8,
vecFixedAssignments=NULL,
matPiConstPredictors=NULL,
vecNormConstExternal=NULL,
strDispModel="constant",
scaMaxEstimationCyclesEMlike=20,
scaMaxEstimationCyclesDropModel=20,
scaNProc=6,
boolVerbose=TRUE,
boolSuperVerbose=TRUE )
rm(list=ls())
load("/home/david/gdrive/phd/datasets/2016_PancreasAtlas/matCountsPancreasRed.RData")
source("~/gitDevelopment/LineagePulse/R/main_MixtureModel.R")
objectLP_pancreas <- runMixtureModel(matCounts=matCountsPancreasRed[1:50,],
scaNMixtures=8,
vecFixedAssignments=NULL,
matPiConstPredictors=NULL,
vecNormConstExternal=NULL,
strDispModel="constant",
scaMaxEstimationCyclesEMlike=20,
scaMaxEstimationCyclesDropModel=20,
scaNProc=6,
boolVerbose=TRUE,
boolSuperVerbose=TRUE )
rm(list=ls())
load("/home/david/gdrive/phd/datasets/2016_PancreasAtlas/matCountsPancreasRed.RData")
source("~/gitDevelopment/LineagePulse/R/main_MixtureModel.R")
objectLP_pancreas <- runMixtureModel(matCounts=matCountsPancreasRed[1:50,],
scaNMixtures=8,
vecFixedAssignments=NULL,
matPiConstPredictors=NULL,
vecNormConstExternal=NULL,
strDispModel="constant",
scaMaxEstimationCyclesEMlike=20,
scaMaxEstimationCyclesDropModel=20,
scaNProc=6,
boolVerbose=TRUE,
boolSuperVerbose=TRUE )
save(objectLP_pancreas, file="/home/david/gdrive/phd/datasets/2016_PancreasAtlas/objectLP_pancreas.RData")
load("/home/david/gdrive/phd/datasets/2016_PancreasAtlas/objectLP_pancreas.RData")
head(objectLP_pancreas$dfResults)
head(objectLP_pancreas@matWeights)
head(objectLP_pancreas@lsMuModelH1$matMuModel)
hist(objectLP_pancreas@matWeights)
hist(log(as.numeric(as.vector(objectLP_pancreas$dfResults$adj.p)))/log(10))
source("~/gitDevelopment/LineagePulse/R/main_MixtureModel.R")
vecidxCentroids <- initialiseCentroidsFromCells(matCounts=objectLP_pancreas@matCountsProc,
scaN=8)
# extract for tsne
vecMMAssign <- as.factor(apply(objectLP_pancreas@matWeights, 1, which.max))
## tsne
matCounts <- matCountsPancreasRed[1:50,]
boolAllGenes <- TRUE
# a) Depth normalise
vecDepth <- apply(matCounts, 2, function(cell) sum(cell, na.rm=TRUE) )
matCountsNorm <- matCounts/matrix(vecDepth,
nrow=dim(matCounts)[1],
ncol=dim(matCounts)[2],
byrow = TRUE)#*mean(vecDepth, na.rm=TRUE)
# 3. Dimensional reduction
if(!boolAllGenes){
# Get interesting genes:
lsM3DropData <- M3DropCleanData(matCounts,
labels = colnames(matCounts),
is.counts=TRUE, min_detected_genes=1)
dfM3Drop <- M3DropDifferentialExpression(expr_mat=lsM3DropData$data,
mt_threshold=1, suppress.plot=FALSE)
dfM3Drop <- dfM3Drop[sort(dfM3Drop$q.value, decreasing=FALSE, index.return=TRUE)$ix,]
# Plot p-val ecdf of M3Drop
vecThres <- seq(-30,0,by=1)
ecdf <- sapply(vecThres, function(thres) sum(thres>=(log(dfM3Drop$p.value)/log(10))))
dfgplotM3DropECDF <- data.frame(
ecdf=ecdf,
threshold=vecThres
)
gplotM3DropECDF <- ggplot() +
geom_line(data=dfgplotM3DropECDF, aes(x=threshold, y=ecdf)) +
labs(title="M3Drop: P-value ECDF")
vecTargetGenes <- as.vector(dfM3Drop[which(dfM3Drop[1:scaNM3Drop,]$p.value <= scaM3DropCutoff),"Gene"])
} else {
print("Using all genes for Diffusion map and t-SNE.")
vecTargetGenes <- rownames(matCounts)[apply(matCounts, 1, function(gene) any(gene[!is.na(gene)]>2) )]
gplotM3DropECDF <- NULL
}
print(paste0("Using ",length(vecTargetGenes), " genes."))
# Diffusion map
# DM with normalised data
# Check: which cells are unique in space characterised by selected genes:
matCountsNormDEgenes <- matCountsNorm[vecTargetGenes,]
print(paste0("Cells which are not unique in space characterised by target IDs: ",
sum(duplicated(t(matCountsNormDEgenes))) ))
matCountsNormDEgenesUniqueCells <- matCountsNormDEgenes[,!duplicated(t(matCountsNormDEgenes))]
matCountsDEgenes <- matCounts[vecTargetGenes,]
matCountsDEgenesUniqueCells <- matCountsDEgenes[,!duplicated(t(matCountsDEgenes))]
# a) PCA
print("PCA")
dfT11_pca <- prcomp(t(log(matCountsNormDEgenesUniqueCells+1)),
center = TRUE,
scale. = TRUE)
dfgplotTcellsPCA <- data.frame(
PC1=dfT11_pca$x[,1],
PC2=dfT11_pca$x[,2],
PC3=dfT11_pca$x[,3],
MM_cluster=vecMMAssign
)
gplotPCA_PC12 <- ggplot() +
geom_point(data=dfgplotTcellsPCA, aes(x=PC1, y=PC2, colour=MM_cluster)) +
labs(title="PCA: PC1 vs PC2")
# c) t-SNE
library(tsne)
print("tSNE")
# Raw counts
#matTsneRaw <- tsne(X=log(t(matCountsDEgenesUniqueCells[vecTargetGenes,])+1))
#save(matTsneRaw, file="/home/david/gdrive/phd/datasets/2016_PancreasAtlas/matTsneRaw.RData")
load("/home/david/gdrive/phd/datasets/2016_PancreasAtlas/matTsneRaw.RData")
dfgplotTsneRaw <- data.frame(
tsne1=matTsneRaw[,1],
tsne2=matTsneRaw[,2],
MM_cluster=vecMMAssign
)
gplotTsneRaw <- ggplot() +
geom_point(data=dfgplotTsneRaw, aes(x=tsne1, y=tsne2, colour=MM_cluster)) +
labs(title="t-SNE map (raw counts)")
# Normalised
#matTsneNorm <- tsne(X=log(t(matCountsNormDEgenesUniqueCells[vecTargetGenes,])+1))
#save(matTsneNorm, file="/home/david/gdrive/phd/datasets/2016_PancreasAtlas/matTsneNorm.RData")
load("/home/david/gdrive/phd/datasets/2016_PancreasAtlas/matTsneNorm.RData")
dfgplotTsneNormalised <- data.frame(
tsne1=matTsneNorm[,1],
tsne2=matTsneNorm[,2],
MM_cluster=vecMMAssign,
MM_cluster1=objectLP_pancreas@matWeights[,1],
MM_cluster2=objectLP_pancreas@matWeights[,2],
MM_cluster3=objectLP_pancreas@matWeights[,3],
MM_cluster4=objectLP_pancreas@matWeights[,4],
MM_cluster5=objectLP_pancreas@matWeights[,5],
MM_cluster6=objectLP_pancreas@matWeights[,6],
MM_cluster7=objectLP_pancreas@matWeights[,7],
MM_cluster8=objectLP_pancreas@matWeights[,8],
Centroid=seq(1,length(vecMMAssign)) %in% vecidxCentroids
)
gplotTsneNormClusterCentroid <- ggplot() +
geom_point(data=dfgplotTsneNormalised, aes(x=tsne1, y=tsne2), colour="green", alpha=0.5) +
geom_point(data=dfgplotTsneNormalised[as.vector(dfgplotTsneNormalised$Centroid),], aes(x=tsne1, y=tsne2), colour="black", alpha=1) +
labs(title="t-SNE map (depth normalised)")
gplotTsneNormCluster1 <- ggplot() +
geom_point(data=dfgplotTsneNormalised, aes(x=tsne1, y=tsne2, colour=MM_cluster1), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneNormCluster2 <- ggplot() +
geom_point(data=dfgplotTsneNormalised, aes(x=tsne1, y=tsne2, colour=MM_cluster2), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneNormCluster3 <- ggplot() +
geom_point(data=dfgplotTsneNormalised, aes(x=tsne1, y=tsne2, colour=MM_cluster3), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneNormCluster4 <- ggplot() +
geom_point(data=dfgplotTsneNormalised, aes(x=tsne1, y=tsne2, colour=MM_cluster4), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneNormCluster5 <- ggplot() +
geom_point(data=dfgplotTsneNormalised, aes(x=tsne1, y=tsne2, colour=MM_cluster5), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneNormCluster6 <- ggplot() +
geom_point(data=dfgplotTsneNormalised, aes(x=tsne1, y=tsne2, colour=MM_cluster6), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneNormCluster7 <- ggplot() +
geom_point(data=dfgplotTsneNormalised, aes(x=tsne1, y=tsne2, colour=MM_cluster7), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneNormCluster8 <- ggplot() +
geom_point(data=dfgplotTsneNormalised, aes(x=tsne1, y=tsne2, colour=MM_cluster8), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneNormClusterCentroid
gplotTsneNormCluster1
gplotTsneNormClusterCentroid
gplotTsneNormCluster1
gplotTsneNormCluster2
gplotTsneNormCluster3
gplotTsneNormCluster4
gplotTsneNormCluster5
gplotTsneNormCluster6
gplotTsneNormCluster7
gplotTsneNormCluster8
gplotTsneNorm
gplotTsneRaw
gplotTsneNorm <- ggplot() +
geom_point(dfgplotTsneNormalised=dfgplotTsneRaw, aes(x=tsne1, y=tsne2, colour=MM_cluster)) +
labs(title="t-SNE map (raw counts)")
gplotTsneNorm <- ggplot() +
geom_point(data=dfgplotTsneNormalised, aes(x=tsne1, y=tsne2, colour=MM_cluster)) +
labs(title="t-SNE map (raw counts)")
gplotTsneNorm
gplotTsneRaw
gplotTsneRawClusterCentroid <- ggplot() +
geom_point(data=dfgplotTsneRawalised, aes(x=tsne1, y=tsne2), colour="green", alpha=0.5) +
geom_point(data=dfgplotTsneRawalised[as.vector(dfgplotTsneRawalised$Centroid),], aes(x=tsne1, y=tsne2), colour="black", alpha=1) +
labs(title="t-SNE map (depth normalised)")
gplotTsneRawCluster1 <- ggplot() +
geom_point(data=dfgplotTsneRawalised, aes(x=tsne1, y=tsne2, colour=MM_cluster1), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneRawCluster2 <- ggplot() +
geom_point(data=dfgplotTsneRawalised, aes(x=tsne1, y=tsne2, colour=MM_cluster2), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneRawCluster3 <- ggplot() +
geom_point(data=dfgplotTsneRawalised, aes(x=tsne1, y=tsne2, colour=MM_cluster3), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneRawCluster4 <- ggplot() +
geom_point(data=dfgplotTsneRawalised, aes(x=tsne1, y=tsne2, colour=MM_cluster4), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneRawCluster5 <- ggplot() +
geom_point(data=dfgplotTsneRawalised, aes(x=tsne1, y=tsne2, colour=MM_cluster5), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneRawCluster6 <- ggplot() +
geom_point(data=dfgplotTsneRawalised, aes(x=tsne1, y=tsne2, colour=MM_cluster6), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneRawCluster7 <- ggplot() +
geom_point(data=dfgplotTsneRawalised, aes(x=tsne1, y=tsne2, colour=MM_cluster7), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneRawCluster8 <- ggplot() +
geom_point(data=dfgplotTsneRawalised, aes(x=tsne1, y=tsne2, colour=MM_cluster8), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneRawClusterCentroid <- ggplot() +
geom_point(data=dfgplotTsneRaw, aes(x=tsne1, y=tsne2), colour="green", alpha=0.5) +
geom_point(data=dfgplotTsneRaw[as.vector(dfgplotTsneRaw$Centroid),], aes(x=tsne1, y=tsne2), colour="black", alpha=1) +
labs(title="t-SNE map (depth normalised)")
gplotTsneRawCluster1 <- ggplot() +
geom_point(data=dfgplotTsneRaw, aes(x=tsne1, y=tsne2, colour=MM_cluster1), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneRawCluster2 <- ggplot() +
geom_point(data=dfgplotTsneRaw, aes(x=tsne1, y=tsne2, colour=MM_cluster2), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneRawCluster3 <- ggplot() +
geom_point(data=dfgplotTsneRaw, aes(x=tsne1, y=tsne2, colour=MM_cluster3), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneRawCluster4 <- ggplot() +
geom_point(data=dfgplotTsneRaw, aes(x=tsne1, y=tsne2, colour=MM_cluster4), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneRawCluster5 <- ggplot() +
geom_point(data=dfgplotTsneRaw, aes(x=tsne1, y=tsne2, colour=MM_cluster5), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneRawCluster6 <- ggplot() +
geom_point(data=dfgplotTsneRaw, aes(x=tsne1, y=tsne2, colour=MM_cluster6), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneRawCluster7 <- ggplot() +
geom_point(data=dfgplotTsneRaw, aes(x=tsne1, y=tsne2, colour=MM_cluster7), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneRawCluster8 <- ggplot() +
geom_point(data=dfgplotTsneRaw, aes(x=tsne1, y=tsne2, colour=MM_cluster8), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneRawClusterCentroid
dfgplotTsneRaw <- data.frame(
tsne1=matTsneRaw[,1],
tsne2=matTsneRaw[,2],
MM_cluster=vecMMAssign,
MM_cluster1=objectLP_pancreas@matWeights[,1],
MM_cluster2=objectLP_pancreas@matWeights[,2],
MM_cluster3=objectLP_pancreas@matWeights[,3],
MM_cluster4=objectLP_pancreas@matWeights[,4],
MM_cluster5=objectLP_pancreas@matWeights[,5],
MM_cluster6=objectLP_pancreas@matWeights[,6],
MM_cluster7=objectLP_pancreas@matWeights[,7],
MM_cluster8=objectLP_pancreas@matWeights[,8],
Centroid=seq(1,length(vecMMAssign)) %in% vecidxCentroids
)
gplotTsneRaw <- ggplot() +
geom_point(data=dfgplotTsneRaw, aes(x=tsne1, y=tsne2, colour=MM_cluster)) +
labs(title="t-SNE map (raw counts)")
gplotTsneRawClusterCentroid <- ggplot() +
geom_point(data=dfgplotTsneRaw, aes(x=tsne1, y=tsne2), colour="green", alpha=0.5) +
geom_point(data=dfgplotTsneRaw[as.vector(dfgplotTsneRaw$Centroid),], aes(x=tsne1, y=tsne2), colour="black", alpha=1) +
labs(title="t-SNE map (depth normalised)")
gplotTsneRawCluster1 <- ggplot() +
geom_point(data=dfgplotTsneRaw, aes(x=tsne1, y=tsne2, colour=MM_cluster1), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneRawCluster2 <- ggplot() +
geom_point(data=dfgplotTsneRaw, aes(x=tsne1, y=tsne2, colour=MM_cluster2), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneRawCluster3 <- ggplot() +
geom_point(data=dfgplotTsneRaw, aes(x=tsne1, y=tsne2, colour=MM_cluster3), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneRawCluster4 <- ggplot() +
geom_point(data=dfgplotTsneRaw, aes(x=tsne1, y=tsne2, colour=MM_cluster4), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneRawCluster5 <- ggplot() +
geom_point(data=dfgplotTsneRaw, aes(x=tsne1, y=tsne2, colour=MM_cluster5), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneRawCluster6 <- ggplot() +
geom_point(data=dfgplotTsneRaw, aes(x=tsne1, y=tsne2, colour=MM_cluster6), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneRawCluster7 <- ggplot() +
geom_point(data=dfgplotTsneRaw, aes(x=tsne1, y=tsne2, colour=MM_cluster7), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneRawCluster8 <- ggplot() +
geom_point(data=dfgplotTsneRaw, aes(x=tsne1, y=tsne2, colour=MM_cluster8), alpha=0.8) +
labs(title="t-SNE map (depth normalised)")
gplotTsneRawClusterCentroid
gplotTsneRawCluster1
gplotTsneRawCluster2
gplotTsneRawCluster3
gplotTsneRawCluster4
gplotTsneRawCluster5
gplotTsneRawCluster6
gplotTsneRawCluster7
gplotTsneRawCluster8
gplotPCA_PC12
esCountsNorm <- ExpressionSet(assayData=log(matCountsNormDEgenesUniqueCells+1))
dmCountsNorm <- DiffusionMap(esCountsNorm)
dfgplotDMNorm <- data.frame(
DC1=dmCountsNorm$DC1,
library(destiny)
esCountsNorm <- ExpressionSet(assayData=log(matCountsNormDEgenesUniqueCells+1))
dmCountsNorm <- DiffusionMap(esCountsNorm)
dfgplotDMNorm <- data.frame(
DC1=dmCountsNorm$DC1,
library(destiny)
library(destiny)
esCountsNorm <- ExpressionSet(assayData=log(matCountsNormDEgenesUniqueCells+1))
library(Biobase)
esCountsNorm <- ExpressionSet(assayData=log(matCountsNormDEgenesUniqueCells+1))
dmCountsNorm <- DiffusionMap(esCountsNorm)
dfgplotDMNorm <- data.frame(
DC1=dmCountsNorm$DC1,
DC2=dmCountsNorm$DC2,
DC3=dmCountsNorm$DC3,
set=vecBatchIDs[!duplicated(t(matCountsNormDEgenes))]
)
gplotDMNorm_DC12 <- ggplot() +
geom_point(data=dfgplotDMNorm, aes(x=DC1, y=DC2, colour=set)) +
labs(title="Diffusion map (depth nomalised): DC1 vs DC2")
gplotDMNorm_DC13 <- ggplot() +
geom_point(data=dfgplotDMNorm, aes(x=DC1, y=DC3, colour=set)) +
labs(title="Diffusion map (depth nomalised): DC1 vs DC3")
gplotDMNorm_DC23 <- ggplot() +
geom_point(data=dfgplotDMNorm, aes(x=DC2, y=DC3, colour=set)) +
labs(title="Diffusion map (depth nomalised): DC2 vs DC3")
# DM with raw data
esCountsRaw <- ExpressionSet(assayData=log(matCountsDEgenesUniqueCells+1))
dmCountsRaw <- DiffusionMap(esCountsRaw)
dfgplotDMRaw <- data.frame(
DC1=dmCountsRaw$DC1,
DC2=dmCountsRaw$DC2,
DC3=dmCountsRaw$DC3,
set=vecBatchIDs[!duplicated(t(matCountsDEgenes))]
)
gplotDMRaw_DC12 <- ggplot() +
geom_point(data=dfgplotDMRaw, aes(x=DC1, y=DC2, colour=set)) +
labs(title="Diffusion map (raw counts): DC1 vs DC2")
gplotDMRaw_DC13 <- ggplot() +
geom_point(data=dfgplotDMRaw, aes(x=DC1, y=DC3, colour=set)) +
labs(title="Diffusion map (raw counts): DC1 vs DC3")
gplotDMRaw_DC23 <- ggplot() +
geom_point(data=dfgplotDMRaw, aes(x=DC2, y=DC3, colour=set)) +
labs(title="Diffusion map (raw counts): DC2 vs DC3")
dfgplotDMRaw <- data.frame(
DC1=dmCountsRaw$DC1,
DC2=dmCountsRaw$DC2,
DC3=dmCountsRaw$DC3
)
gplotDMRaw_DC12 <- ggplot() +
geom_point(data=dfgplotDMRaw, aes(x=DC1, y=DC2, colour=set)) +
labs(title="Diffusion map (raw counts): DC1 vs DC2")
gplotDMRaw_DC13 <- ggplot() +
geom_point(data=dfgplotDMRaw, aes(x=DC1, y=DC3, colour=set)) +
labs(title="Diffusion map (raw counts): DC1 vs DC3")
gplotDMRaw_DC23 <- ggplot() +
geom_point(data=dfgplotDMRaw, aes(x=DC2, y=DC3, colour=set)) +
labs(title="Diffusion map (raw counts): DC2 vs DC3")
dfgplotDMNorm <- data.frame(
DC1=dmCountsNorm$DC1,
DC2=dmCountsNorm$DC2,
DC3=dmCountsNorm$DC3
)
gplotDMNorm_DC12 <- ggplot() +
geom_point(data=dfgplotDMNorm, aes(x=DC1, y=DC2, colour=set)) +
labs(title="Diffusion map (depth nomalised): DC1 vs DC2")
gplotDMNorm_DC13 <- ggplot() +
geom_point(data=dfgplotDMNorm, aes(x=DC1, y=DC3, colour=set)) +
labs(title="Diffusion map (depth nomalised): DC1 vs DC3")
gplotDMNorm_DC23 <- ggplot() +
geom_point(data=dfgplotDMNorm, aes(x=DC2, y=DC3, colour=set)) +
labs(title="Diffusion map (depth nomalised): DC2 vs DC3")
gplotDMNorm_DC12
gplotDMNorm_DC23
gplotDMNorm_DC12 <- ggplot() +
geom_point(data=dfgplotDMNorm, aes(x=DC1, y=DC2)) +
labs(title="Diffusion map (depth nomalised): DC1 vs DC2")
gplotDMNorm_DC13 <- ggplot() +
geom_point(data=dfgplotDMNorm, aes(x=DC1, y=DC3)) +
labs(title="Diffusion map (depth nomalised): DC1 vs DC3")
gplotDMNorm_DC23 <- ggplot() +
geom_point(data=dfgplotDMNorm, aes(x=DC2, y=DC3)) +
labs(title="Diffusion map (depth nomalised): DC2 vs DC3")
gplotDMRaw_DC12 <- ggplot() +
geom_point(data=dfgplotDMRaw, aes(x=DC1, y=DC2)) +
labs(title="Diffusion map (raw counts): DC1 vs DC2")
gplotDMRaw_DC13 <- ggplot() +
geom_point(data=dfgplotDMRaw, aes(x=DC1, y=DC3)) +
labs(title="Diffusion map (raw counts): DC1 vs DC3")
gplotDMRaw_DC23 <- ggplot() +
geom_point(data=dfgplotDMRaw, aes(x=DC2, y=DC3)) +
labs(title="Diffusion map (raw counts): DC2 vs DC3")
gplotDMNorm_DC12
gplotDMNorm_DC23
gplotDMNorm_DC13
gplotDMRaw_DC12
gplotDMRaw_DC23
gplotDMRaw_DC13
gplotDMNorm_DC12
gplotDMNorm_DC23
gplotDMNorm_DC13
gplotDMNorm_DC23
gplotDMNorm_DC12
gplotDMNorm_DC12 <- ggplot() +
geom_point(data=dfgplotDMNorm, aes(x=DC1, y=DC2, colour=MM_cluster)) +
labs(title="Diffusion map (depth nomalised): DC1 vs DC2")
gplotDMNorm_DC12
dfgplotDMNorm <- data.frame(
DC1=dmCountsNorm$DC1,
DC2=dmCountsNorm$DC2,
DC3=dmCountsNorm$DC3,
MM_cluster=vecMMAssign,
MM_cluster1=objectLP_pancreas@matWeights[,1],
MM_cluster2=objectLP_pancreas@matWeights[,2],
MM_cluster3=objectLP_pancreas@matWeights[,3],
MM_cluster4=objectLP_pancreas@matWeights[,4],
MM_cluster5=objectLP_pancreas@matWeights[,5],
MM_cluster6=objectLP_pancreas@matWeights[,6],
MM_cluster7=objectLP_pancreas@matWeights[,7],
MM_cluster8=objectLP_pancreas@matWeights[,8],
Centroid=seq(1,length(vecMMAssign)) %in% vecidxCentroids
)
gplotDMNorm_DC12 <- ggplot() +
geom_point(data=dfgplotDMNorm, aes(x=DC1, y=DC2, colour=MM_cluster)) +
labs(title="Diffusion map (depth nomalised): DC1 vs DC2")
gplotDMNorm_DC12
gplotDMNorm_DC13 <- ggplot() +
geom_point(data=dfgplotDMNorm, aes(x=DC1, y=DC3, colour=MM_cluster)) +
labs(title="Diffusion map (depth nomalised): DC1 vs DC3")
gplotDMNorm_DC23 <- ggplot() +
geom_point(data=dfgplotDMNorm, aes(x=DC2, y=DC3, colour=MM_cluster)) +
labs(title="Diffusion map (depth nomalised): DC2 vs DC3")
gplotDMNorm_DC13
gplotDMNorm_DC23
