ylab(paste0("log10 expression of gene with q=", round(log(objectLP$dfResults$adj.p[i])/log(10),2) ))
}
for(i in vecidxGeneToPlot){
dfgplotGeneGeneScatter <- data.frame(
cond=c(as.vector(objectLP@dfAnnotationProc$condition)),
batch=c(as.vector(objectLP@dfAnnotationProc$batch)),
WeightMixture1=objectLP@matWeights[,1]+1,
genex=log(c(matAstroLPNormData[idxRef1,])+1),
geney=log(c(matAstroLPNormData[i,])+1)
)
dfgplotCentroids <- data.frame(
cond=c("Centroid_FGF", "Centroid_EGF-FGF"),
batch=c("Centroid", "Centroid"),
genex=log(c(objectLP@lsMuModelH1$matMuModel[idxRef1,])+1),
geney=log(c(objectLP@lsMuModelH1$matMuModel[i,])+1)
)
lsgplotsGeneGeneScatter[[match(i, vecGeneIdxToPlot)]] <- ggplot() +
geom_point(data=dfgplotGeneGeneScatter,
aes(x=genex, y=geney, colour=cond, shape=batch, alpha=WeightMixture1)) +
geom_point(data=dfgplotGeneGeneScatter,
aes(x=genex, y=geney, colour=cond, shape=batch),
shape = 1,colour = "black")
geom_point(data=dfgplotCentroids,
aes(x=genex, y=geney, colour=cond, shape=batch),
alpha=1, size=3 ) +
scale_colour_manual(values=cbbPalette) +
xlab(paste0("log10 expression of gene with q=", round(log(objectLP$dfResults$adj.p[idxRef1])/log(10),2) )) +
ylab(paste0("log10 expression of gene with q=", round(log(objectLP$dfResults$adj.p[i])/log(10),2) ))
}
i
dfgplotGeneGeneScatter <- data.frame(
cond=c(as.vector(objectLP@dfAnnotationProc$condition)),
batch=c(as.vector(objectLP@dfAnnotationProc$batch)),
WeightMixture1=objectLP@matWeights[,1]+1,
genex=log(c(matAstroLPNormData[idxRef1,])+1),
geney=log(c(matAstroLPNormData[i,])+1)
)
dfgplotCentroids <- data.frame(
cond=c("Centroid_FGF", "Centroid_EGF-FGF"),
batch=c("Centroid", "Centroid"),
genex=log(c(objectLP@lsMuModelH1$matMuModel[idxRef1,])+1),
geney=log(c(objectLP@lsMuModelH1$matMuModel[i,])+1)
)
ggplot() +
geom_point(data=dfgplotGeneGeneScatter,
aes(x=genex, y=geney, colour=cond, shape=batch, alpha=WeightMixture1)) +
geom_point(data=dfgplotGeneGeneScatter,
aes(x=genex, y=geney, colour=cond, shape=batch),
shape = 1,colour = "black")
ggplot() +
geom_point(data=dfgplotGeneGeneScatter,
aes(x=genex, y=geney, colour=cond, shape=batch, alpha=WeightMixture1)) +
geom_point(data=dfgplotGeneGeneScatter,
aes(x=genex, y=geney, colour=cond, shape=batch),
colour = "black")
geom_point(data=dfgplotCentroids,
aes(x=genex, y=geney, colour=cond, shape=batch),
alpha=1, size=3 ) +
scale_colour_manual(values=cbbPalette) +
xlab(paste0("log10 expression of gene with q=", round(log(objectLP$dfResults$adj.p[idxRef1])/log(10),2) )) +
ylab(paste0("log10 expression of gene with q=", round(log(objectLP$dfResults$adj.p[i])/log(10),2) ))
ggplot() +
geom_point(data=dfgplotGeneGeneScatter,
aes(x=genex, y=geney, colour=cond, shape=batch, alpha=WeightMixture1)) +
geom_point(data=dfgplotGeneGeneScatter,
aes(x=genex, y=geney, shape=batch),
colour = "black")
ggplot() +
geom_point(data=dfgplotGeneGeneScatter,
aes(x=genex, y=geney, shape=batch),
colour = "black") +
geom_point(data=dfgplotGeneGeneScatter,
aes(x=genex, y=geney, colour=cond, shape=batch, alpha=WeightMixture1)) +
geom_point(data=dfgplotCentroids,
aes(x=genex, y=geney, colour=cond, shape=batch),
alpha=1, size=3 ) +
scale_colour_manual(values=cbbPalette) +
xlab(paste0("log10 expression of gene with q=", round(log(objectLP$dfResults$adj.p[idxRef1])/log(10),2) )) +
ylab(paste0("log10 expression of gene with q=", round(log(objectLP$dfResults$adj.p[i])/log(10),2) ))
ggplot() +
geom_point(data=dfgplotGeneGeneScatter,
aes(x=genex, y=geney, shape=batch),
colour = "black", alpha=0.4) +
geom_point(data=dfgplotGeneGeneScatter,
aes(x=genex, y=geney, colour=cond, shape=batch, alpha=WeightMixture1)) +
geom_point(data=dfgplotCentroids,
aes(x=genex, y=geney, colour=cond, shape=batch),
alpha=1, size=3 ) +
scale_colour_manual(values=cbbPalette) +
xlab(paste0("log10 expression of gene with q=", round(log(objectLP$dfResults$adj.p[idxRef1])/log(10),2) )) +
ylab(paste0("log10 expression of gene with q=", round(log(objectLP$dfResults$adj.p[i])/log(10),2) ))
ggplot() +
geom_point(data=dfgplotGeneGeneScatter,
aes(x=genex, y=geney, colour=cond, shape=batch, alpha=WeightMixture1)) +
geom_point(data=dfgplotCentroids,
aes(x=genex, y=geney, colour=cond, shape=batch),
alpha=1, size=3 ) +
scale_colour_manual(values=cbbPalette) +
xlab(paste0("log10 expression of gene with q=", round(log(objectLP$dfResults$adj.p[idxRef1])/log(10),2) )) +
ylab(paste0("log10 expression of gene with q=", round(log(objectLP$dfResults$adj.p[i])/log(10),2) ))
ggplot() +
geom_point(data=dfgplotGeneGeneScatter,
aes(x=genex, y=geney, colour=cond, shape=batch, alpha=WeightMixture1)) +
geom_point(data=dfgplotCentroids,
aes(x=genex, y=geney, colour=cond, shape=batch),
alpha=1, size=3 ) +
scale_colour_manual(values=cbbPalette) +
xlab(paste0("log10 expression of gene with q=", round(log(objectLP$dfResults$adj.p[idxRef1])/log(10),2) )) +
ylab(paste0("log10 expression of gene with q=", round(log(objectLP$dfResults$adj.p[i])/log(10),2) )) +
theme(panel.grid.major = element_line(colour = "grey40"),
panel.grid.minor = element_blank()
)
ggplot() +
geom_point(data=dfgplotGeneGeneScatter,
aes(x=genex, y=geney, colour=cond, shape=batch, alpha=WeightMixture1)) +
geom_point(data=dfgplotCentroids,
aes(x=genex, y=geney, colour=cond, shape=batch),
alpha=1, size=3 ) +
scale_colour_manual(values=cbbPalette) +
xlab(paste0("log10 expression of gene with q=", round(log(objectLP$dfResults$adj.p[idxRef1])/log(10),2) )) +
ylab(paste0("log10 expression of gene with q=", round(log(objectLP$dfResults$adj.p[i])/log(10),2) )) +
theme_bw() +
theme(panel.grid.major = element_line(colour = "grey40"),
panel.grid.minor = element_blank()
)
dfgplotGeneGeneScatter <- data.frame(
cond=c(as.vector(objectLP@dfAnnotationProc$condition)),
batch=c(as.vector(objectLP@dfAnnotationProc$batch)),
WeightMixture1=objectLP@matWeights[,1],
genex=log(c(matAstroLPNormData[idxRef1,])+1),
geney=log(c(matAstroLPNormData[i,])+1)
)
dfgplotCentroids <- data.frame(
cond=c("Centroid_FGF", "Centroid_EGF-FGF"),
batch=c("Centroid", "Centroid"),
genex=log(c(objectLP@lsMuModelH1$matMuModel[idxRef1,])+1),
geney=log(c(objectLP@lsMuModelH1$matMuModel[i,])+1)
)
ggplot() +
geom_point(data=dfgplotGeneGeneScatter,
aes(x=genex, y=geney, colour=cond, shape=batch, alpha=WeightMixture1)) +
geom_point(data=dfgplotCentroids,
aes(x=genex, y=geney, colour=cond, shape=batch),
alpha=1, size=3 ) +
scale_colour_manual(values=cbbPalette) +
xlab(paste0("log10 expression of gene with q=", round(log(objectLP$dfResults$adj.p[idxRef1])/log(10),2) )) +
ylab(paste0("log10 expression of gene with q=", round(log(objectLP$dfResults$adj.p[i])/log(10),2) )) +
theme_bw() +
theme(panel.grid.major = element_line(colour = "grey40"),
panel.grid.minor = element_blank()
)
ggplot() +
geom_point(data=dfgplotGeneGeneScatter,
aes(x=genex, y=geney, colour=cond, shape=batch), alpha=0.8) +
geom_point(data=dfgplotCentroids,
aes(x=genex, y=geney, colour=cond, shape=batch),
alpha=1, size=3 ) +
scale_colour_manual(values=cbbPalette) +
xlab(paste0("log10 expression of gene with q=", round(log(objectLP$dfResults$adj.p[idxRef1])/log(10),2) )) +
ylab(paste0("log10 expression of gene with q=", round(log(objectLP$dfResults$adj.p[i])/log(10),2) ))
lsgplotsGeneGeneScatter <- list()
vecQvalIdxToPlot <- c(1,2,3,4,20,50, 500,1000,3000,3500,4000)
vecGeneIdxToPlot <- order(objectLP$dfResults$adj.p)[vecQvalIdxToPlot]
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
idxRef1 <- vecGeneIdxToPlot[2]
vecidxGeneToPlot <- vecGeneIdxToPlot[!vecGeneIdxToPlot %in% idxRef1]
for(i in vecidxGeneToPlot){
dfgplotGeneGeneScatter <- data.frame(
cond=c(as.vector(objectLP@dfAnnotationProc$condition)),
batch=c(as.vector(objectLP@dfAnnotationProc$batch)),
Mixture1=apply(objectLP@matWeights,1,which.max)==1,
genex=log(c(matAstroLPNormData[idxRef1,])+1),
geney=log(c(matAstroLPNormData[i,])+1)
)
dfgplotCentroids <- data.frame(
cond=c("Centroid_FGF", "Centroid_EGF-FGF"),
genex=log(c(objectLP@lsMuModelH1$matMuModel[idxRef1,])+1),
geney=log(c(objectLP@lsMuModelH1$matMuModel[i,])+1)
)
lsgplotsGeneGeneScatter[[match(i, vecGeneIdxToPlot)]] <- ggplot() +
geom_point(data=dfgplotGeneGeneScatter,
aes(x=genex, y=geney, colour=cond, shape=Mixture1), alpha=0.8) +
geom_point(data=dfgplotCentroids,
aes(x=genex, y=geney, colour=cond),
alpha=1, size=3 ) +
scale_colour_manual(values=cbbPalette) +
xlab(paste0("log10 expression of gene with q=", round(log(objectLP$dfResults$adj.p[idxRef1])/log(10),2) )) +
ylab(paste0("log10 expression of gene with q=", round(log(objectLP$dfResults$adj.p[i])/log(10),2) ))
}
lsgplotsGeneGeneScatter[[1]]
lsgplotsGeneGeneScatter[[length(lsgplotsGeneGeneScatter)]]
pdf("~/phd/data/RSA/fitPlots/GeneGeneScatterAssignments.pdf")
for(g in lsgplotsGeneGeneScatter) print(g)
dev.off()
graphics.off()
library(devtools)
install_github("YosefLab/ImpulseDE2")
?unique
a <- c(g=8, h=3)
a[1]
names(a[1])
match(a, 4)
match(4,a)
match(3,a)
match(a, 3)
cumsum(c(2,3,1,1,2))
unique(dfAnnotationAstro$populations)
vecNCentroidsPerPop <- c(1=2)
dfAnnotationAstro[dfAnnotationAstro$condition=="FGF",]$populations <- "FGF"
rownames(dfAnnotationAstro) <- dfAnnotationAstro$cell
rm(list=ls())
library(ggplot2)
load("~/phd/datasets/2016_Buettner_Astrocytes/Astrocytes.RDATA")
matCountsAstro <- counts.rep.all
dfAnnotationAstro <- data.frame(
cell=colnames(matCountsAstro),
condition=x,
batch=sapply(as.vector(x.b), function(id) paste(unlist(strsplit(id," ")),collapse="_") ),
stringsAsFactors=FALSE
)
dfAnnotationAstro$populations <- NA
dfAnnotationAstro[dfAnnotationAstro$condition=="FGF",]$populations <- "FGF"
rownames(dfAnnotationAstro) <- dfAnnotationAstro$cell
vecDepth <- apply(matCountsAstro,2,sum)
hist(vecDepth)
boolDepthOutlier <- vecDepth > 1*10^7
sum(boolDepthOutlier)
matCountsAstro <- matCountsAstro[,!boolDepthOutlier]
dfAnnotationAstro <- dfAnnotationAstro[!boolDepthOutlier,]
write.table(matCountsAstro, file="~/phd/data/RSA/buettner17_Counts.txt",
quote=FALSE, sep=" ")
write.table(dfAnnotationAstro, file="~/phd/data/RSA/buettner17_AnnotCells.txt",
quote=FALSE, sep=" ", row.names = FALSE)
matPCA_scanpy <- read.csv("~/phd/data/RSA/scanpy_buettner17_pca.csv", row.names = 1)
dfgplotPcaAstro <- data.frame(
pc1=matPCA_scanpy[,1],
pc2=matPCA_scanpy[,2],
pc3=matPCA_scanpy[,3],
pc4=matPCA_scanpy[,4],
cond=as.vector(dfAnnotationAstro$condition),
batch=as.factor(dfAnnotationAstro$batch)
)
ggplot() + geom_point(data=dfgplotPcaAstro, aes(x=pc1, y=pc2, colour=cond, shape=batch))
vecboolPCAOutlier <- matPCA_scanpy[,2]>5*10^4 | matPCA_scanpy[,1]>2*10^5
print(sum(vecboolPCAOutlier))
matCountsAstro <- matCountsAstro[,!vecboolPCAOutlier]
dfAnnotationAstro <- dfAnnotationAstro[!vecboolPCAOutlier,]
dfgplotPcaAstroOut <- data.frame(
pc1=matPCA_scanpy[!vecboolPCAOutlier,1],
pc2=matPCA_scanpy[!vecboolPCAOutlier,2],
pc3=matPCA_scanpy[!vecboolPCAOutlier,3],
pc4=matPCA_scanpy[!vecboolPCAOutlier,4],
cond=as.vector(dfAnnotationAstro$condition[!vecboolPCAOutlier]),
batch=as.factor(dfAnnotationAstro$batch[!vecboolPCAOutlier])
)
ggplot() + geom_point(data=dfgplotPcaAstroOut, aes(x=pc1, y=pc2, colour=cond, shape=batch))
write.table(matCountsAstro, file="~/phd/data/RSA/buettner17_pcaout_Counts.txt",
quote=FALSE, sep=" ")
write.table(dfAnnotationAstro, file="~/phd/data/RSA/buettner17_pcaout_AnnotCells.txt",
quote=FALSE, sep=" ", row.names = FALSE)
dfgplotDepthAstro <- data.frame(
depth=apply(matCountsAstro,2,sum),
cond=dfAnnotationAstro$condition,
batch=dfAnnotationAstro$batch,
condbatch=paste0(dfAnnotationAstro$condition, "-",
dfAnnotationAstro$batch)
)
ggplot() + geom_density(data=dfgplotDepthAstro,
aes(x=depth, fill=batch), alpha=0.8)
ggplot() + geom_density(data=dfgplotDepthAstro,
aes(x=depth, fill=cond), alpha=0.8)
ggplot() + geom_density(data=dfgplotDepthAstro,
aes(x=depth, fill=condbatch), alpha=0.8)
vecDepth <- apply(matCountsAstro, 2, sum)
vecDepthFac <- vecDepth/mean(vecDepth)
dfgplotDepthFac <- data.frame(
depthFactor=vecDepthFac,
batch_cond=paste0(dfAnnotationAstro$condition, "-",
dfAnnotationAstro$batch)
)
ggplot() + geom_boxplot(data=dfgplotDepthFac, aes(x=batch_cond, y=depthFactor))
pdf("~/phd/data/RSA/stats/depth.pdf")
ggplot() + geom_boxplot(data=dfgplotDepthFac, aes(x=batch_cond, y=depthFactor))
ggplot() + geom_density(data=dfgplotDepthAstro,
aes(x=depth, fill=condbatch), alpha=0.8)
ggplot() + geom_density(data=dfgplotDepthAstro,
aes(x=depth, fill=batch), alpha=0.8)
ggplot() + geom_density(data=dfgplotDepthAstro,
aes(x=depth, fill=cond), alpha=0.8)
dev.off()
graphics.off()
vecidxTopExpressed <- (sort(apply(matCountsAstro,1,sum), decreasing=TRUE, index.return=TRUE)$ix)[1:4000]
source("~/gitDevelopment/LineagePulse/R/main_RSA.R")
vecNCentroidsPerPop <- c("FGF"=2)
source("~/gitDevelopment/LineagePulse/R/main_RSA.R")
source("~/gitDevelopment/LineagePulse/R/main_RSA.R")
vecNCentroidsPerPop <- c("FGF"=2)
objectLP <- runRSA(matCounts=matCountsAstro[vecidxTopExpressed,],
dfAnnotation=dfAnnotationAstro,
vecConfounders=c("batch"),
scaNMixtures=2,
vecNCentroidsPerPop=vecNCentroidsPerPop,
matPiConstPredictors=NULL,
vecNormConstExternal=vecDepthFac,
strDispModel="constant",
scaMaxEstimationCyclesEMlike=20,
scaMaxEstimationCyclesDropModel=5,
scaNProc=3,
boolVerbose=TRUE,
boolSuperVerbose=TRUE )
dfAnnotationAstro
names(vecNCentroidsPerPop) in dfAnnotationAstro$populations
names(vecNCentroidsPerPop) %in% dfAnnotationAstro$populations
source("~/gitDevelopment/LineagePulse/R/main_RSA.R")
objectLP <- runRSA(matCounts=matCountsAstro[vecidxTopExpressed,],
dfAnnotation=dfAnnotationAstro,
vecConfounders=c("batch"),
scaNMixtures=2,
vecNCentroidsPerPop=vecNCentroidsPerPop,
matPiConstPredictors=NULL,
vecNormConstExternal=vecDepthFac,
strDispModel="constant",
scaMaxEstimationCyclesEMlike=20,
scaMaxEstimationCyclesDropModel=5,
scaNProc=3,
boolVerbose=TRUE,
boolSuperVerbose=TRUE )
vecidxTopExpressed <- (sort(apply(matCountsAstro,1,sum), decreasing=TRUE, index.return=TRUE)$ix)[1:200]
source("~/gitDevelopment/LineagePulse/R/main_RSA.R")
vecNCentroidsPerPop <- c("FGF"=2)
objectLP <- runRSA(matCounts=matCountsAstro[vecidxTopExpressed,],
dfAnnotation=dfAnnotationAstro,
vecConfounders=c("batch"),
scaNMixtures=3,
vecNCentroidsPerPop=vecNCentroidsPerPop,
matPiConstPredictors=NULL,
vecNormConstExternal=vecDepthFac,
strDispModel="constant",
scaMaxEstimationCyclesEMlike=20,
scaMaxEstimationCyclesDropModel=5,
scaNProc=3,
boolVerbose=TRUE,
boolSuperVerbose=TRUE )
objectLP <- runRSA(matCounts=matCountsAstro[vecidxTopExpressed,],
dfAnnotation=dfAnnotationAstro,
vecConfounders=c("batch"),
scaNMixtures=3,
vecNCentroidsPerPop=vecNCentroidsPerPop,
matPiConstPredictors=NULL,
vecNormConstExternal=vecDepthFac,
strDispModel="constant",
scaMaxEstimationCyclesEMlike=20,
scaMaxEstimationCyclesDropModel=5,
scaNProc=1,
boolVerbose=TRUE,
boolSuperVerbose=TRUE )
head(dfAnnotationAstro)
dfAnnotationAstro
dfAnnotationAstro[60]
dfAnnotationAstro$populations[60]
is.na(dfAnnotationAstro$populations[60])
source("~/gitDevelopment/LineagePulse/R/main_RSA.R")
objectLP <- runRSA(matCounts=matCountsAstro[vecidxTopExpressed,],
dfAnnotation=dfAnnotationAstro,
vecConfounders=c("batch"),
scaNMixtures=3,
vecNCentroidsPerPop=vecNCentroidsPerPop,
matPiConstPredictors=NULL,
vecNormConstExternal=vecDepthFac,
strDispModel="constant",
scaMaxEstimationCyclesEMlike=20,
scaMaxEstimationCyclesDropModel=5,
scaNProc=1,
boolVerbose=TRUE,
boolSuperVerbose=TRUE )
vecidxTopExpressed <- (sort(apply(matCountsAstro,1,sum), decreasing=TRUE, index.return=TRUE)$ix)[1:20]
source("~/gitDevelopment/LineagePulse/R/main_RSA.R")
vecNCentroidsPerPop <- c("FGF"=2)
objectLP <- runRSA(matCounts=matCountsAstro[vecidxTopExpressed,],
dfAnnotation=dfAnnotationAstro,
vecConfounders=c("batch"),
scaNMixtures=3,
vecNCentroidsPerPop=vecNCentroidsPerPop,
matPiConstPredictors=NULL,
vecNormConstExternal=vecDepthFac,
strDispModel="constant",
scaMaxEstimationCyclesEMlike=20,
scaMaxEstimationCyclesDropModel=5,
scaNProc=1,
boolVerbose=TRUE,
boolSuperVerbose=TRUE )
source("~/gitDevelopment/LineagePulse/R/main_RSA.R")
vecNCentroidsPerPop <- c("FGF"=2)
objectLP <- runRSA(matCounts=matCountsAstro[vecidxTopExpressed,],
dfAnnotation=dfAnnotationAstro,
vecConfounders=c("batch"),
scaNMixtures=3,
vecNCentroidsPerPop=vecNCentroidsPerPop,
matPiConstPredictors=NULL,
vecNormConstExternal=vecDepthFac,
strDispModel="constant",
scaMaxEstimationCyclesEMlike=20,
scaMaxEstimationCyclesDropModel=5,
scaNProc=1,
boolVerbose=TRUE,
boolSuperVerbose=TRUE )
source("~/gitDevelopment/LineagePulse/R/main_RSA.R")
vecNCentroidsPerPop <- c("FGF"=2)
objectLP <- runRSA(matCounts=matCountsAstro[vecidxTopExpressed,],
dfAnnotation=dfAnnotationAstro,
vecConfounders=c("batch"),
scaNMixtures=3,
vecNCentroidsPerPop=vecNCentroidsPerPop,
matPiConstPredictors=NULL,
vecNormConstExternal=vecDepthFac,
strDispModel="constant",
scaMaxEstimationCyclesEMlike=20,
scaMaxEstimationCyclesDropModel=5,
scaNProc=1,
boolVerbose=TRUE,
boolSuperVerbose=TRUE )
source("~/gitDevelopment/LineagePulse/R/main_RSA.R")
vecNCentroidsPerPop <- c("FGF"=2)
objectLP <- runRSA(matCounts=matCountsAstro[vecidxTopExpressed,],
dfAnnotation=dfAnnotationAstro,
vecConfounders=c("batch"),
scaNMixtures=3,
vecNCentroidsPerPop=vecNCentroidsPerPop,
matPiConstPredictors=NULL,
vecNormConstExternal=vecDepthFac,
strDispModel="constant",
scaMaxEstimationCyclesEMlike=20,
scaMaxEstimationCyclesDropModel=5,
scaNProc=1,
boolVerbose=TRUE,
boolSuperVerbose=TRUE )
source("~/gitDevelopment/LineagePulse/R/main_RSA.R")
vecNCentroidsPerPop <- c("FGF"=2)
objectLP <- runRSA(matCounts=matCountsAstro[vecidxTopExpressed,],
dfAnnotation=dfAnnotationAstro,
vecConfounders=c("batch"),
scaNMixtures=3,
vecNCentroidsPerPop=vecNCentroidsPerPop,
matPiConstPredictors=NULL,
vecNormConstExternal=vecDepthFac,
strDispModel="constant",
scaMaxEstimationCyclesEMlike=20,
scaMaxEstimationCyclesDropModel=5,
scaNProc=1,
boolVerbose=TRUE,
boolSuperVerbose=TRUE )
source("~/gitDevelopment/LineagePulse/R/main_RSA.R")
vecNCentroidsPerPop <- c("FGF"=2)
objectLP <- runRSA(matCounts=matCountsAstro[vecidxTopExpressed,],
dfAnnotation=dfAnnotationAstro,
vecConfounders=c("batch"),
scaNMixtures=3,
vecNCentroidsPerPop=vecNCentroidsPerPop,
matPiConstPredictors=NULL,
vecNormConstExternal=vecDepthFac,
strDispModel="constant",
scaMaxEstimationCyclesEMlike=20,
scaMaxEstimationCyclesDropModel=5,
scaNProc=1,
boolVerbose=TRUE,
boolSuperVerbose=TRUE )
source("~/gitDevelopment/LineagePulse/R/main_RSA.R")
vecNCentroidsPerPop <- c("FGF"=2)
objectLP <- runRSA(matCounts=matCountsAstro[vecidxTopExpressed,],
dfAnnotation=dfAnnotationAstro,
vecConfounders=c("batch"),
scaNMixtures=3,
vecNCentroidsPerPop=vecNCentroidsPerPop,
matPiConstPredictors=NULL,
vecNormConstExternal=vecDepthFac,
strDispModel="constant",
scaMaxEstimationCyclesEMlike=20,
scaMaxEstimationCyclesDropModel=5,
scaNProc=1,
boolVerbose=TRUE,
boolSuperVerbose=TRUE )
source("~/gitDevelopment/LineagePulse/R/main_RSA.R")
vecNCentroidsPerPop <- c("FGF"=2)
objectLP <- runRSA(matCounts=matCountsAstro[vecidxTopExpressed,],
dfAnnotation=dfAnnotationAstro,
vecConfounders=c("batch"),
scaNMixtures=3,
vecNCentroidsPerPop=vecNCentroidsPerPop,
matPiConstPredictors=NULL,
vecNormConstExternal=vecDepthFac,
strDispModel="constant",
scaMaxEstimationCyclesEMlike=20,
scaMaxEstimationCyclesDropModel=5,
scaNProc=1,
boolVerbose=TRUE,
boolSuperVerbose=TRUE )
match("p", c("N", NA, "p", NA))
source("~/gitDevelopment/LineagePulse/R/main_RSA.R")
vecNCentroidsPerPop <- c("FGF"=2)
objectLP <- runRSA(matCounts=matCountsAstro[vecidxTopExpressed,],
dfAnnotation=dfAnnotationAstro,
vecConfounders=c("batch"),
scaNMixtures=3,
vecNCentroidsPerPop=vecNCentroidsPerPop,
matPiConstPredictors=NULL,
vecNormConstExternal=vecDepthFac,
strDispModel="constant",
scaMaxEstimationCyclesEMlike=20,
scaMaxEstimationCyclesDropModel=5,
scaNProc=1,
boolVerbose=TRUE,
boolSuperVerbose=TRUE )
