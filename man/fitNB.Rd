% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/srcLineagePulse_fitNB.R
\name{fitNB}
\alias{fitNB}
\title{Fit negative binomial model to data}
\usage{
fitNB(matCounts, dfAnnotation, vecConfoundersMu = NULL,
  vecConfoundersDisp = NULL, vecNormConst, scaDFSplinesMu = NULL,
  scaDFSplinesDisp = NULL, matWeights = NULL, matMuModelInit = NULL,
  lsmatBatchModelInitMu = NULL, matDispModelInit = NULL,
  lsmatBatchModelInitDisp = NULL, strMuModel, strDispModel,
  boolVerbose = TRUE, boolSuperVerbose = TRUE)
}
\arguments{
\item{matCounts}{(matrix genes x cells)
Count data of all cells, unobserved entries are NA.}

\item{dfAnnotation}{(data frame cells x meta characteristics)
Annotation table which contains meta data on cells.}

\item{vecConfoundersMu}{(vector of strings number of confounders on  mean)
[Default NULL] Confounders to correct for in mu batch
correction model, must be subset of column names of
dfAnnotation which describe condounding variables.}

\item{vecConfoundersDisp}{(vector of strings number of confounders on dispersion)
[Default NULL] Confounders to correct for in dispersion batch
correction model, must be subset of column names of
dfAnnotation which describe condounding variables.}

\item{vecNormConst}{(numeric vector number of cells) 
Model scaling factors, one per cell. These factors linearly 
scale the mean model for evaluation of the loglikelihood.}

\item{scaDFSplinesMu}{(sca) [Default NULL] 
If strMuModel=="splines", the degrees of freedom of the natural
cubic spline to be used as a mean parameter model.}

\item{scaDFSplinesDisp}{(sca) [Default NULL] 
If strDispModelFull=="splines" or strDispModelRed=="splines", 
the degrees of freedom of the natural
cubic spline to be used as a dispersion parameter model.}

\item{matWeights}{(numeric matrix cells x mixtures) [Default NULL]
Assignments of cells to mixtures (for strMuModel="MM").}

\item{matMuModelInit}{(numeric matrix genes x mu model parameters)
[Default NULL]
Contains initialisation of mean model parameters 
according to the used model.}

\item{lsmatBatchModelInitMu}{(list) [Default NULL]
Initialisation of batch correction models for mean parameter.}

\item{matDispModelInit}{(numeric matrix genes x disp model parameters)
[Default NULL]
Contains initialisation of dispersion model parameters 
according to the used model.}

\item{lsmatBatchModelInitDisp}{(list) [Default NULL]
Initialisation of batch correction models for dispersion parameter.}

\item{strMuModel}{(str) {"constant", "groups", "MM",
"splines","impulse"}
[Default "impulse"] Model according to which the mean
parameter is fit to each gene as a function of 
population structure in the alternative model (H1).}

\item{strDispModel}{(str) {"constant", "groups", "splines"}
[Default "constant"] Model according to which dispersion
parameter is fit to each gene as a function of 
population structure in the given model.}

\item{boolVerbose}{(bool) [Default TRUE]
Whether to follow convergence of the 
iterative parameter estimation with one report per cycle.}

\item{boolSuperVerbose}{(bool) [Default TRUE]
Whether to follow convergence of the 
iterative parameter estimation in high detail with local 
convergence flags and step-by-step loglikelihood computation.}
}
\value{
list
\itemize{
\item lsMuModel (list)
Object containing description of gene-wise mean parameter models.
\item lsDispModel (list)
Object containing description of gene-wise dispersion parameter models.
\item matWeights (numeric matrix cells x mixtures) [Default NULL]
Assignments of cells to mixtures (for strMuModel="MM").
\item boolConvergenceModel: (bool) 
Convergence status of model estimation.
\item strReport: (str) Log of model estimation to be added to 
overall log.
}
}
\description{
This function fits a NB model with variable input. The NB model can be used
to perform model selection to test for drop-out.
}
\details{
To save memory, not the entire parameter matrix (genes x cells) but
the parmater models are stored in the objects lsMuModel and lsDispModel. 
In short, these object contain
the gene/cell-wise parameters of the model used to constrain the parameter
in question and the predictors necessary to evaluate the parameter model
to receive the observation-wise paramter values.
}
\seealso{
Called by \code{fitContinuousModels}. 
Calls parameter estimation wrappers:
\code{fitPiZINB}, \code{fitZINBMuDisp}.
Calls \code{evalLogLikMatrix} to follow convergence.
}
