% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/srcLineagePulse_fitZINB_cofitMeanDispersion.R
\name{fitZINBMuDisp}
\alias{fitZINBMuDisp}
\title{Coordinate mean and dispersion parameter co-estimation step}
\usage{
fitZINBMuDisp(matCountsProc, vecNormConst, lsMuModel, lsDispModel, lsDropModel,
  matWeights)
}
\arguments{
\item{matCountsProc:}{(matrix genes x cells)
Observed read counts, not observed are NA.}

\item{vecNormConst:}{(numeric vector number of cells) 
Model scaling factors, one per cell.}

\item{lsMuModel:}{(list length 2)
All objects necessary to compute mean parameters for all
observations.
\itemize{
  \item matMuModel: (numerical matrix genes x number of model parameters)
Parameters of mean model for each gene.
  \item lsMuModelGlobal: (list) Global variables for mean model,
common to all genes.
    \itemize{
      \item strMuModel: (str) {"constant", "impulse", "clusters", 
    "windows"} Name of the mean model.
      \item scaNumCells: (scalar) [Default NA] Number of cells
    for which model is evaluated. Used for constant model.
      \item vecPseudotime: (numerical vector number of cells)
    [Default NA] Pseudotime coordinates of cells. Used for
    impulse model.
      \item vecClusterAssign: (integer vector length number of
    cells) [Default NA] Index of cluster assigned to each cell.
    Used for clusters model.
      \item MAXIT_BFGS_MuDisp: (int) Maximum number of iterations
    for BFGS estimation of impulse model with optim (termination criterium).
      \item RELTOL_BFGS_Impulse: (scalar) Relative tolerance of
    change in objective function for BFGS estimation of impulse 
    model with optim (termination criterium).
  }
}}

\item{lsDispModel:}{(list length 2)
All objects necessary to compute dispersion parameters for all
observations.
\itemize{
  \item matDispModel: (numerical matrix genes x number of model parameters)
Parameters of dispersion model for each gene.
  \item lsDispModelGlobal: (list) Global variables for mean model,
common to all genes.
    \itemize{
      \item strDispModel: (str) {"constant"} 
    Name of the dispersion model.
      \item scaNumCells: (scalar) [Default NA] Number of cells
    for which model is evaluated. Used for constant model.
      \item vecPseudotime: (numerical vector number of cells)
    [Default NA] Pseudotime coordinates of cells. Used for
    impulse model.
      \item vecClusterAssign: (integer vector length number of
    cells) [Default NA] Index of cluster assigned to each cell.
    Used for clusters model.
  }
}}

\item{lsDropModel:}{(list length 2)
All objects necessary to compute drop-out parameters for all
observations, omitting mean parameters (which are stored in lsMeanModel).
\itemize{
  \item matDropoutLinModel: (numeric matrix cells x number of model parameters)
{offset parameter, log(mu) parameter, parameters belonging to
constant predictors}
Parameters of drop-out model for each cell
  \item matPiConstPredictors: (numeric matrix genes x number of constant
gene-wise drop-out predictors) Predictors for logistic drop-out 
fit other than offset and mean parameter (i.e. parameters which
are constant for all observations in a gene and externally supplied.)
Is null if no constant predictors are supplied.
}}
}
\value{
list (length 3)
   \itemize{
     \item matMuModel: (numeric matrix genes x mu model parameters)
       Contains the mean model parameters according to the used model.
     \item matDispModel: (numeric matrix genes x disp model parameters)
       Contains the dispersion model parameters according to the used model.
     \item vecConvergence: (numeric vector number of genes) 
       Convergence status of optim for each gene.
   }
}
\description{
Auxillary function that calls the estimation functions for the
different mean and dispersion models according to their needs. Note that one
function has to be coded for each combination of mean and dispersion
models.
}
\seealso{
Called by \code{fitZINB}. Calls fitting wrappers:
\code{fitDispConstMuConstZINB},
\code{fitDispConstMuClustersZINB},
\code{fitDispConstMuVecWindowsZINB} and
\code{fitDispConstMuImpulseZINB}.
}
\author{
David Sebastian Fischer
}
